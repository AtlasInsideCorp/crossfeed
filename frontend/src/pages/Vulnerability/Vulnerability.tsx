import { useAuthContext } from 'context';
import React, { useCallback, useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';
import { Vulnerability } from 'types';
import classes from './styles.module.scss';

export const VulnerabilityClass: React.FC = () => {
  const { vulnerabilityId } = useParams();
  const { apiGet } = useAuthContext();
  const [vulnerability, setVulnerability] = useState<Vulnerability>();
  // const classes = useStyles();

  const fetchVulnerability = useCallback(async () => {
    try {
      const result = await apiGet<Vulnerability>(
        `/api/vulnerabilities/${vulnerabilityId}`
      );
      setVulnerability(result);
    } catch (e) {
      console.error(e);
    }
  }, [vulnerabilityId, apiGet]);

  useEffect(() => {
    fetchVulnerability();
  }, [fetchVulnerability]);

  if (!vulnerability) return;

  return (
    <div className={classes.root}>
      <div className={classes.inner}>
        <h1>${vulnerability.title}</h1>
      </div>
    </div>
  );
};
